{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"className\", \"label\", \"onChange\", \"options\", \"value\"];\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport Select from \"react-select\";\nimport { appendClassName } from \"./view-helpers\";\nvar setDefaultStyle = {\n  option: function option() {\n    return {};\n  },\n  control: function control() {\n    return {};\n  },\n  dropdownIndicator: function dropdownIndicator() {\n    return {};\n  },\n  indicatorSeparator: function indicatorSeparator() {\n    return {};\n  }\n};\n\nfunction Sorting(_ref) {\n  var className = _ref.className,\n      label = _ref.label,\n      _onChange = _ref.onChange,\n      options = _ref.options,\n      value = _ref.value,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var selectedValue = value;\n  var selectedOption = selectedValue ? options.find(function (option) {\n    return option.value === selectedValue;\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: appendClassName(\"sui-sorting\", className)\n  }, rest), label && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sui-sorting__label\"\n  }, label), /*#__PURE__*/React.createElement(Select, {\n    className: \"sui-select\",\n    classNamePrefix: \"sui-select\",\n    value: selectedOption,\n    onChange: function onChange(o) {\n      return _onChange(o.value);\n    },\n    options: options,\n    isSearchable: false,\n    styles: setDefaultStyle\n  }));\n}\n\nSorting.propTypes = {\n  className: PropTypes.string,\n  label: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string,\n    label: PropTypes.string\n  })).isRequired,\n  value: PropTypes.string\n};\nexport default Sorting;","map":null,"metadata":{},"sourceType":"module"}